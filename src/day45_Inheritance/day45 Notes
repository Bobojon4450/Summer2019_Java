10/29/2019

Topic:	
		1. default access modifier
		2. Multiple classes
		3. OOP Inheritance  

package: day45_Inheritance


Access modifiers: public, private, default, and protected

	public access modifier:  visible at everywhere. Global. 

	private access modifier: only visible within the class.

	default access modifier: only visible to the classes that are in the same package
							 not visible outside the package

	if we don't give public, private or protected keywords, then the default access modifier 
	will be given by default.

				   Example: package A
							public class a{
								int num =100;
							}

							package B
							public class b{
								num is not visible in this class, because those two classes are located in two different packages 
							}


	protected access modifier: only visible to the classes that are in the same package. 
				               But, it can be inheritable to the classes outside the package

				Not visible but inheritable.


----------------------------------------------------------------------------------------------------------------------------------

Multiple classes: we can have multiple classes in a java file. There can only be one public 
                  class, and the public class' name MUST match with the java file' name. Other 
                  classes we are creating MUST have default access modifiers.
 				  One public class per one java file.

Inheritance: used for building relationships between classes, it build super and sub 
             relationships between classes.
			 Easiest way to get rich, we use "extends" keyword to build super and sub 
			 relationships between classes.
 
			public 	class   A    extends    B
							sub			  super	

			sub class (A): it's also called child class, sub class can inherit the visible or 
			               protected features from the super class.
			               		
			  Features that have public or protected access modifiers can be inherited anywhere,
			   even outside the package.
			  Features that have default access modifier can only be inherited to the classes
			   that are in the same package.
			  Features that have private access modifier can never be inherited.

		   super class (B): it's also called parent class, super class cannot inherit any 
							features of the sub class.
			  One class can only extend one class, but one class can be extended by 
			   multiple classes.
			  One super class can have multiple sub classes.

Benefits of inheritance :
				1. re-usability.
				2. easy to maintain.


POM: page object model


java Review: 
			Encapsulation.    (done)
			protected vs Default. (done)
			Inheritance.  


OOP Encapsulation: Hiding the data by providing private access modifier.
				   1. private access modifier
				   2. getter/setters
				   private: only visible within the class.

	getter (read only): instance method, return-type of this instance method MUST match with the 
						private instance variable. Access modifier should be public.

	default: not visible outside the package

	protected: not visible outside the package, but it can be inherited outside package
