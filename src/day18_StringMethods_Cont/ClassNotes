09/10/2019
Topic: String class

Warm up:
	1. write a program that asks user's first and last name, then prints out the initials of the user
	Ex: Enter your first name and last name:
		Cybertek
		Batch12

		output:
		your initial is: CB

	2. write a program that can print user' first and last name
		Requiremnt:
			first character MUST be capital and remaining characters Must be in lower case
			Ex:	Enter your first name and last name:
				mUhTaR
				cYBERTEK

			output:
			your full name is: Muhtar Cybertek

========================================================================================================


Methods of String:

		indexOf(charValue): returns first occurred char' index number
				Ex: String str ="CybertekCI";
				// index number: 0123456789
					int num = str.indexOf('e'); //3


		indexOf(strValue): returns the first occurrence of the given charSequence' first char' index number:
				Ex: String str = "CybertekCI"
				    index number: 0123456789
					int num = str.indexOf("ek");//6


		lastIndexOf(strValue): returns the last occurrence of the charSequence' first char' index number:
			   		 Ex: String str ="CybertekCI"
			    			index number: 0123456789
							int num= str.lastIndexOf("e");//6



			If the indexOf method returned Negative number that means the the given value is not Exist in the String.
				  Ex:  String str ="ABC";
						str.indexOf("D"); ==> -1



		isEmpty():	checks if the String is empty, then returns boolean expressions	
		 		    empty ==> true,  !empty ==> false
		 		    Ex:
		 			  String str="A";
		 				 str.isEmpty ==> false;




		equals(str): checks if the two String' visible text are 
	 		         equal or not, then returns boolean expression
	 		
	 		equal ==> true       !equal ==> false
	 		Ex:
	 				String A1 = "Cybertek";
					String A2 = new String("Cybertek");

						A1 == A2 ==> // false,  different location

						A1.equals(A2)==> //true, visible text is same



		 equalsIgnoreCase(str):checks if the two String' visible text are equal or not, 
		                       then returns boolean expression.
		 		
		 		IGNORES THE CASE SENSITIVITY
		 		EX:
		 			String s1 = "JAVA";
					String s2 = new String("java");

					s1 == s2  // false, different location

					s1.equals(s2)   // false, case sensitivity

					s1.equalsIgnoreCase(s2) ); // true




		contains(str): checks if the str is contained in the String 
		               or not,  then returns boolean expression
		 
		 	conatined ==> true       !conatined ==> false

		 	EX:
		 	String name ="Muhtar";
			name.contains("ABC") ==> false
			name.conatins("M") ==> true




		startsWith(str): checks if the String is started with the given str or not, then retunrs boolean expressions
		 
		 	startedwith ==> true       !startedwith ==> false

		 	Ex:
			 	String Today = "Java";
			 	Today.startsWith("J") ==> true 


			 String names = "Cybertek School is a great palce to learn java";
			 names.startsWith("Cybertek School")==> true



		endsWith(str): checks if the String is ended with the given str or not, then retunrs boolean expressions
	
			endedwith ==> true        !endedwith ==> false

			EX:
				String B1 ="Muhtar";
					B1.endsWith("r") ==>  true
					B1.endsWith("M") ==>  false

